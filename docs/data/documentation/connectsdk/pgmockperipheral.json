{"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral"},"hierarchy":{"paths":[["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/connectsdk\/pgmockperipheral"]},{"paths":["\/documentation\/connectsdk\/pgmockperipheral"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PGMockPeripheral","kind":"identifier"}],"modules":[{"name":"ConnectSDK"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PGMockPeripheral"}],"roleHeading":"Class","symbolKind":"class","title":"PGMockPeripheral","externalID":"c:@M@ConnectSDK@objc(cs)PGMockPeripheral"},"topicSections":[{"identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/init(identifier:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/advertisementData","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/available"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/advertise(withIndicator:)","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/sendBarcode(_:)","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/setBatteryLevel(batteryLevel:)"],"title":"Instance Methods"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"A mock peripheral for use in testing"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@objcMembers","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PGMockPeripheral"}],"languages":["swift"]}],"kind":"declarations"}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGPeripheral"],"kind":"relationships"},{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.proglove.Mark2SDK\/objc(pl)NSObject","doc:\/\/com.proglove.Mark2SDK\/s7CVarArgP","doc:\/\/com.proglove.Mark2SDK\/s28CustomDebugStringConvertibleP","doc:\/\/com.proglove.Mark2SDK\/s23CustomStringConvertibleP","doc:\/\/com.proglove.Mark2SDK\/SQ","doc:\/\/com.proglove.Mark2SDK\/SH"]}],"references":{"doc://com.proglove.Mark2SDK/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.proglove.Mark2SDK\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral/sendBarcode(_:)":{"abstract":[{"type":"text","text":"Send a barcode to the central"}],"navigatorTitle":[{"kind":"identifier","text":"sendBarcode:"}],"role":"symbol","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/sendBarcode(_:)","kind":"symbol","url":"\/documentation\/connectsdk\/pgmockperipheral\/sendbarcode(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sendBarcode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"title":"sendBarcode(_:)","type":"topic"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral/setBatteryLevel(batteryLevel:)":{"abstract":[{"type":"text","text":"Set the battery level of the Mock"}],"title":"setBatteryLevel(batteryLevel:)","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/setBatteryLevel(batteryLevel:)","kind":"symbol","url":"\/documentation\/connectsdk\/pgmockperipheral\/setbatterylevel(batterylevel:)","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"setBatteryLevelWithBatteryLevel:"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setBatteryLevel","kind":"identifier"},{"text":"(","kind":"text"},{"text":"batteryLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":")"}]},"doc://com.proglove.Mark2SDK/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.proglove.Mark2SDK\/s28CustomDebugStringConvertibleP"},"doc://com.proglove.Mark2SDK/s7CVarArgP":{"title":"Swift.CVarArg","identifier":"doc:\/\/com.proglove.Mark2SDK\/s7CVarArgP","type":"unresolvable"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral":{"type":"topic","navigatorTitle":[{"text":"PGMockPeripheral","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral","kind":"symbol","url":"\/documentation\/connectsdk\/pgmockperipheral","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PGMockPeripheral","kind":"identifier"}],"title":"PGMockPeripheral","abstract":[{"type":"text","text":"A mock peripheral for use in testing"}]},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral/available":{"navigatorTitle":[{"text":"available","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"available"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/available","abstract":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if the peripheral is available for connection, "},{"code":"false","type":"codeVoice"},{"text":" otherwise. Set this property to control if the peripheral appears in the App","type":"text"}],"kind":"symbol","url":"\/documentation\/connectsdk\/pgmockperipheral\/available","title":"available"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK":{"abstract":[{"type":"text","text":"The "},{"type":"strong","inlineContent":[{"text":"ProGlove ConnectSDK","type":"text"}]},{"text":" is a software development kit that enables integration between your iOS apps and the ProGlove system.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK","kind":"symbol","url":"\/documentation\/connectsdk","title":"ConnectSDK","type":"topic"},"doc://com.proglove.Mark2SDK/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/com.proglove.Mark2SDK\/SH"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral/advertise(withIndicator:)":{"abstract":[{"type":"text","text":"Advertise the Scanner with the given indicator, equivalent to scanning the pairing QR with the Scanner"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/advertise(withIndicator:)","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"advertiseWithIndicator:","kind":"identifier"}],"url":"\/documentation\/connectsdk\/pgmockperipheral\/advertise(withindicator:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"advertise","kind":"identifier"},{"kind":"text","text":"("},{"text":"withIndicator","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"advertise(withIndicator:)"},"doc://com.proglove.Mark2SDK/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/com.proglove.Mark2SDK\/objc(pl)NSObject"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral/init(identifier:)":{"title":"init(identifier:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"identifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/connectsdk\/pgmockperipheral\/init(identifier:)","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/init(identifier:)","abstract":[{"type":"text","text":"Initialize PGMockPeripheral with identifier"}],"type":"topic","navigatorTitle":[{"text":"initWithIdentifier:","kind":"identifier"}],"kind":"symbol"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGMockPeripheral/advertisementData":{"title":"advertisementData","type":"topic","navigatorTitle":[{"kind":"identifier","text":"advertisementData"}],"url":"\/documentation\/connectsdk\/pgmockperipheral\/advertisementdata","kind":"symbol","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/advertisementData","abstract":[{"text":"The advertisement data to use. A collection of keys and values","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"advertisementData"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]","kind":"text"}],"role":"symbol"},"doc://com.proglove.Mark2SDK/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.proglove.Mark2SDK\/SQ"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGPeripheral":{"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGPeripheral","navigatorTitle":[{"text":"PGPeripheral","kind":"identifier"}],"kind":"symbol","title":"PGPeripheral","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PGPeripheral"}],"url":"\/documentation\/connectsdk\/pgperipheral"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":"Class","path":"\/metadata\/roleHeading","op":"replace"},{"path":"\/metadata\/title","op":"replace","value":"PGMockPeripheral"},{"value":"class","op":"replace","path":"\/metadata\/symbolKind"},{"path":"\/metadata\/fragments","op":"replace","value":[{"text":"PGMockPeripheral","kind":"identifier"}]},{"path":"\/metadata\/navigatorTitle","value":[{"text":"PGMockPeripheral","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/topicSections","value":[{"identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/advertisementData","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/available"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/advertise(withIndicator:)","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/init(identifier:)","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/sendBarcode(_:)","doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGMockPeripheral\/setBatteryLevel(batteryLevel:)"],"title":"Instance Methods"}]},{"op":"replace","path":"\/relationshipsSections","value":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGPeripheral"],"type":"inheritsFrom"}]},{"value":null,"path":"\/seeAlsoSections","op":"add"},{"value":{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"@interface","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PGMockPeripheral"},{"kind":"text","text":" : "},{"text":"PGPeripheral","preciseIdentifier":"c:@M@ConnectSDK@objc(cs)PGPeripheral","kind":"typeIdentifier","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGPeripheral"}]}],"kind":"declarations"},"path":"\/primaryContentSections\/0","op":"replace"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1sendBarcode(_:)\/title","op":"replace","value":"sendBarcode:"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1sendBarcode(_:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"sendBarcode:"}],"op":"replace"},{"value":"setBatteryLevelWithBatteryLevel:","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1setBatteryLevel(batteryLevel:)\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1setBatteryLevel(batteryLevel:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"setBatteryLevelWithBatteryLevel:","kind":"identifier"}]},{"op":"replace","value":"PGMockPeripheral","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral\/title"},{"op":"replace","value":[{"kind":"identifier","text":"PGMockPeripheral"}],"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral\/fragments"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1available\/title","value":"available","op":"replace"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1available\/fragments","value":[{"kind":"identifier","text":"available"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1advertise(withIndicator:)\/title","op":"replace","value":"advertiseWithIndicator:"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"advertiseWithIndicator:"}],"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1advertise(withIndicator:)\/fragments"},{"value":"initWithIdentifier:","op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1init(identifier:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1init(identifier:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"initWithIdentifier:"}]},{"op":"replace","value":"advertisementData","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1advertisementData\/title"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGMockPeripheral~1advertisementData\/fragments","op":"replace","value":[{"kind":"identifier","text":"advertisementData"}]},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGPeripheral\/title","value":"PGPeripheral","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGPeripheral\/fragments","value":[{"text":"PGPeripheral","kind":"identifier"}]}]}]}
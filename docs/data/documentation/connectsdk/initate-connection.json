{"sections":[],"identifier":{"url":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/initate-connection","interfaceLanguage":"swift"},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/connectsdk\/initate-connection"]},{"paths":["\/documentation\/connectsdk\/initate-connection"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"role":"article","title":"Initiate Connection","roleHeading":"Article","modules":[{"name":"ConnectSDK"}]},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Create the Central Manager object","anchor":"Create-the-Central-Manager-object"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To initiate and set the delegate to the central manager object, confirm "},{"type":"reference","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManagerDelegate","isActive":true},{"text":" and use the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/init(delegate:enableRestoration:)"},{"text":" method.","type":"text"}]},{"text":"Initiate new connections","anchor":"Initiate-new-connections","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"To initiate a new connection, create a connection QR code by invoking the "},{"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager","isActive":true,"type":"reference"},{"type":"text","text":" method "},{"isActive":true,"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/initiateScannerConnection(withImageSize:)","type":"reference"},{"type":"text","text":" (make sure Bluetooth is on by checking the PGCentralManager "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGManager\/state"},{"type":"text","text":")."}],"type":"paragraph"},{"type":"heading","level":4,"anchor":"Swift","text":"Swift"},{"type":"codeListing","code":["import ConnectSDK","...","class ViewController: UIViewController, PGCentralManagerDelegate {","...","var central: PGCentralManager?","...","func setup() {","    central = PGCentralManager(delegate: self, enableRestoration: false)","}"],"syntax":"swift"},{"text":"Objective-C","level":4,"anchor":"Objective-C","type":"heading"},{"code":["#import <ConnectSDK\/ConnectSDK.h>","...","@interface ViewController () <PGCentralManagerDelegate>","@property PGCentralManager *central;","...","- (void)setup {","   self.central = [[PGCentralManager alloc] initWithDelegate:self enableRestoration:NO];","}"],"type":"codeListing","syntax":"objc"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK"]]},"references":{"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManagerDelegate":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PGCentralManagerDelegate","kind":"identifier"}],"role":"symbol","title":"PGCentralManagerDelegate","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManagerDelegate","type":"topic","kind":"symbol","url":"\/documentation\/connectsdk\/pgcentralmanagerdelegate","navigatorTitle":[{"text":"PGCentralManagerDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"PGCentralManagerDelegate"}]},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManager/initiateScannerConnection(withImageSize:)":{"abstract":[{"type":"text","text":"This method generates an identifier which is embedded in a QR code for the Scanner to Scan, which the Scanner will advertise with."},{"text":" ","type":"text"},{"type":"text","text":"The central begins scanning for a Scanner advertising the generated identifier, and on discovering will connect to the Scanner."},{"type":"text","text":" "},{"type":"text","text":"After Scanner interrogation, the scanner will become ready and "},{"type":"codeVoice","code":"-centralManager:scannerDidBecomeReady:"},{"text":" will be called.","type":"text"},{"text":" ","type":"text"},{"text":"This method is a convenience method which calls ","type":"text"},{"type":"codeVoice","code":"-initiateScannerConnectionWithQRCorrectionLevel:imageSize:scale"},{"type":"text","text":" "},{"type":"text","text":"with correction level Q (appropriate for dirty environments such as a warehouse) and the scale factor of the main screen"}],"title":"initiateScannerConnection(withImageSize:)","type":"topic","role":"symbol","navigatorTitle":[{"text":"initiateScannerConnectionWithImageSize:","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/connectsdk\/pgcentralmanager\/initiatescannerconnection(withimagesize:)","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/initiateScannerConnection(withImageSize:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initiateScannerConnection","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withImageSize"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@S@CGSize","text":"CGSize","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"UIImage","preciseIdentifier":"c:objc(cs)UIImage","kind":"typeIdentifier"}]},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGManager/state":{"navigatorTitle":[{"kind":"identifier","text":"state"}],"kind":"symbol","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGManager\/state","type":"topic","url":"\/documentation\/connectsdk\/pgmanager\/state","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@ConnectSDK@E@PGManagerState","text":"PGManagerState"}],"abstract":[{"text":"State of the PGManager","type":"text"}],"role":"symbol","title":"state"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PGCentralManager","kind":"identifier"}],"type":"topic","url":"\/documentation\/connectsdk\/pgcentralmanager","role":"symbol","navigatorTitle":[{"text":"PGCentralManager","kind":"identifier"}],"title":"PGCentralManager","abstract":[{"type":"text","text":"PGCentralManager"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager","kind":"symbol"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManager/init(delegate:enableRestoration:)":{"url":"\/documentation\/connectsdk\/pgcentralmanager\/init(delegate:enablerestoration:)","title":"init(delegate:enableRestoration:)","abstract":[{"text":"Init the central manager with a delegate and optionally enable restoration","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/init(delegate:enableRestoration:)","navigatorTitle":[{"kind":"identifier","text":"initWithDelegate:enableRestoration:"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"delegate","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@ConnectSDK@objc(pl)PGCentralManagerDelegate","text":"PGCentralManagerDelegate"},{"kind":"text","text":", "},{"kind":"externalParam","text":"enableRestoration"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK":{"abstract":[{"type":"text","text":"The "},{"type":"strong","inlineContent":[{"text":"ProGlove ConnectSDK","type":"text"}]},{"text":" is a software development kit that enables integration between your iOS apps and the ProGlove system.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK","kind":"symbol","url":"\/documentation\/connectsdk","title":"ConnectSDK","type":"topic"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"op":"add","value":null,"path":"\/topicSections"},{"path":"\/seeAlsoSections","op":"add","value":null},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManagerDelegate\/title","value":"PGCentralManagerDelegate","op":"replace"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManagerDelegate\/fragments","op":"replace","value":[{"text":"PGCentralManagerDelegate","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1initiateScannerConnection(withImageSize:)\/title","value":"initiateScannerConnectionWithImageSize:"},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1initiateScannerConnection(withImageSize:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"initiateScannerConnectionWithImageSize:"}],"op":"replace"},{"value":"state","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGManager~1state\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGManager~1state\/fragments","value":[{"text":"state","kind":"identifier"}]},{"value":"PGCentralManager","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager\/fragments","value":[{"text":"PGCentralManager","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1init(delegate:enableRestoration:)\/title","value":"initWithDelegate:enableRestoration:","op":"replace"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"text":"initWithDelegate:enableRestoration:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1init(delegate:enableRestoration:)\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}
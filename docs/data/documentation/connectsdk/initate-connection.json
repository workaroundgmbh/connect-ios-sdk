{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Create-the-Central-Manager-object","level":2,"type":"heading","text":"Create the Central Manager object"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To initiate and set the delegate to the central manager object, confirm "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManagerDelegate"},{"type":"text","text":" and use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/init(delegate:enableRestoration:)"},{"type":"text","text":" method."}]},{"anchor":"Initiate-new-connections","level":3,"type":"heading","text":"Initiate new connections"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To initiate a new connection, create a connection QR code by invoking the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager"},{"type":"text","text":" method "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/initiateScannerConnection(withImageSize:)"},{"type":"text","text":" (make sure Bluetooth is on by checking the PGCentralManager "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGManager\/state"},{"type":"text","text":")."}]},{"anchor":"Swift","level":4,"type":"heading","text":"Swift"},{"type":"codeListing","syntax":"swift","code":["import ConnectSDK","...","class ViewController: UIViewController, PGCentralManagerDelegate {","...","var central: PGCentralManager?","...","func setup() {","    central = PGCentralManager(delegate: self, enableRestoration: false)","}"]},{"anchor":"Objective-C","level":4,"type":"heading","text":"Objective-C"},{"type":"codeListing","syntax":"objc","code":["#import <ConnectSDK\/ConnectSDK.h>","...","@interface ViewController () <PGCentralManagerDelegate>","@property PGCentralManager *central;","...","- (void)setup {","   self.central = [[PGCentralManager alloc] initWithDelegate:self enableRestoration:NO];","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/connectsdk\/initate-connection"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/connectsdk\/initate-connection"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/initate-connection","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"Initiate Connection","role":"article","modules":[{"name":"ConnectSDK"}]},"hierarchy":{"paths":[["doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK"]]},"references":{"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManager/init(delegate:enableRestoration:)":{"role":"symbol","title":"init(delegate:enableRestoration:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PGCentralManagerDelegate","preciseIdentifier":"c:@M@ConnectSDK@objc(pl)PGCentralManagerDelegate"},{"kind":"text","text":", "},{"kind":"externalParam","text":"enableRestoration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Init the central manager with a delegate and optionally enable restoration"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/init(delegate:enableRestoration:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"initWithDelegate:enableRestoration:"}],"url":"\/documentation\/connectsdk\/pgcentralmanager\/init(delegate:enablerestoration:)"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManager/initiateScannerConnection(withImageSize:)":{"role":"symbol","title":"initiateScannerConnection(withImageSize:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initiateScannerConnection"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withImageSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGSize","preciseIdentifier":"c:@S@CGSize"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UIImage","preciseIdentifier":"c:objc(cs)UIImage"}],"abstract":[{"type":"text","text":"This method generates an identifier which is embedded in a QR code for the Scanner to Scan, which the Scanner will advertise with."},{"type":"text","text":" "},{"type":"text","text":"The central begins scanning for a Scanner advertising the generated identifier, and on discovering will connect to the Scanner."},{"type":"text","text":" "},{"type":"text","text":"After Scanner interrogation, the scanner will become ready and "},{"type":"codeVoice","code":"-centralManager:scannerDidBecomeReady:"},{"type":"text","text":" will be called."},{"type":"text","text":" "},{"type":"text","text":"This method is a convenience method which calls "},{"type":"codeVoice","code":"-initiateScannerConnectionWithQRCorrectionLevel:imageSize:scale"},{"type":"text","text":" "},{"type":"text","text":"with correction level Q (appropriate for dirty environments such as a warehouse) and the scale factor of the main screen"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager\/initiateScannerConnection(withImageSize:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"initiateScannerConnectionWithImageSize:"}],"url":"\/documentation\/connectsdk\/pgcentralmanager\/initiatescannerconnection(withimagesize:)"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManager":{"role":"symbol","title":"PGCentralManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PGCentralManager"}],"abstract":[{"type":"text","text":"PGCentralManager"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PGCentralManager"}],"url":"\/documentation\/connectsdk\/pgcentralmanager"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGCentralManagerDelegate":{"role":"symbol","title":"PGCentralManagerDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PGCentralManagerDelegate"}],"abstract":[{"type":"text","text":"PGCentralManagerDelegate"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGCentralManagerDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PGCentralManagerDelegate"}],"url":"\/documentation\/connectsdk\/pgcentralmanagerdelegate"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK":{"role":"collection","title":"ConnectSDK","abstract":[{"type":"text","text":"The "},{"type":"strong","inlineContent":[{"type":"text","text":"ProGlove ConnectSDK"}]},{"type":"text","text":" is a software development kit that enables integration between your iOS apps and the ProGlove system."}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK","kind":"symbol","type":"topic","url":"\/documentation\/connectsdk"},"doc://com.proglove.Mark2SDK/documentation/ConnectSDK/PGManager/state":{"role":"symbol","title":"state","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PGManagerState","preciseIdentifier":"c:@M@ConnectSDK@E@PGManagerState"}],"abstract":[{"type":"text","text":"State of the PGManager"}],"identifier":"doc:\/\/com.proglove.Mark2SDK\/documentation\/ConnectSDK\/PGManager\/state","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"state"}],"url":"\/documentation\/connectsdk\/pgmanager\/state"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1init(delegate:enableRestoration:)\/title","value":"initWithDelegate:enableRestoration:"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1init(delegate:enableRestoration:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"initWithDelegate:enableRestoration:"}]},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1initiateScannerConnection(withImageSize:)\/title","value":"initiateScannerConnectionWithImageSize:"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager~1initiateScannerConnection(withImageSize:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"initiateScannerConnectionWithImageSize:"}]},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager\/title","value":"PGCentralManager"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManager\/fragments","value":[{"kind":"identifier","text":"PGCentralManager"}]},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManagerDelegate\/title","value":"PGCentralManagerDelegate"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGCentralManagerDelegate\/fragments","value":[{"kind":"identifier","text":"PGCentralManagerDelegate"}]},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGManager~1state\/title","value":"state"},{"op":"replace","path":"\/references\/doc:~1~1com.proglove.Mark2SDK~1documentation~1ConnectSDK~1PGManager~1state\/fragments","value":[{"kind":"identifier","text":"state"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}